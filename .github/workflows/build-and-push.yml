#
#
#name: CI for Docker
#
#on:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]
#jobs:
#  run-lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#        with:
#          # Full git history is needed to get a proper list of changed files within `super-linter`
#          fetch-depth: 0
#
#      - name: Lint Code Base
#        uses: github/super-linter@v4
#        env:
#          VALIDATE_ALL_CODEBASE: false
#          DEFAULT_BRANCH: "master"
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#  build:
#
#    runs-on: ubuntu-latest
#    needs: run-lint
#    permissions:
#      contents: read
#
#    steps:
#    - uses: actions/checkout@v4
#    - name: Set up JDK 17
#      uses: actions/setup-java@v4
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#
#    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
#    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
#    - name: Setup Gradle
#      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
#
#    - name: Build with Gradle Wrapper
#      run: ./gradlew build
#
#    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
#    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
#    #
#    # - name: Setup Gradle
#    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
#    #   with:
#    #     gradle-version: '8.5'
#    #
#    # - name: Build with Gradle 8.5
#    #   run: gradle build
#
#  dependency-submission:
#
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write
#
#    steps:
#    - uses: actions/checkout@v4
#    - name: Set up JDK 17
#      uses: actions/setup-java@v4
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#
#    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
#    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
#    - name: Generate and submit dependency graph
#      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
#
#  build-and-push-backend:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}
#      - name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          file: backend.dockerfile
#          push: true
#          tags: ppaunovski/backend:latest
#
#  build-and-push-frontend:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}
#      - name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          file: frontend.dockerfile
#          push: true
#          tags: ppaunovski/frontend:latest
#
#
#
name: Build and Push Docker Images

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest -f backend.dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest -f frontend.dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
